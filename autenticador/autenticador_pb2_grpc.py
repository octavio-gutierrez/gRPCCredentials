# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import autenticador_pb2 as autenticador__pb2


class AutenticadorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.autenticar = channel.unary_unary(
                '/autenticador.Autenticador/autenticar',
                request_serializer=autenticador__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=autenticador__pb2.AuthenticationReply.FromString,
                )
        self.autenticar2 = channel.unary_unary(
                '/autenticador.Autenticador/autenticar2',
                request_serializer=autenticador__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=autenticador__pb2.AuthenticationReply.FromString,
                )


class AutenticadorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def autenticar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def autenticar2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AutenticadorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'autenticar': grpc.unary_unary_rpc_method_handler(
                    servicer.autenticar,
                    request_deserializer=autenticador__pb2.AuthenticationRequest.FromString,
                    response_serializer=autenticador__pb2.AuthenticationReply.SerializeToString,
            ),
            'autenticar2': grpc.unary_unary_rpc_method_handler(
                    servicer.autenticar2,
                    request_deserializer=autenticador__pb2.AuthenticationRequest.FromString,
                    response_serializer=autenticador__pb2.AuthenticationReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'autenticador.Autenticador', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Autenticador(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def autenticar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autenticador.Autenticador/autenticar',
            autenticador__pb2.AuthenticationRequest.SerializeToString,
            autenticador__pb2.AuthenticationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def autenticar2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autenticador.Autenticador/autenticar2',
            autenticador__pb2.AuthenticationRequest.SerializeToString,
            autenticador__pb2.AuthenticationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
